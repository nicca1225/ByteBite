rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user owns the document
    function isUserEmail(email) {
      return request.auth != null && request.auth.token.email == email;
    }

    // User profiles collection - user can only manage their own
    // Using email as the document ID for clarity in Firestore
    match /users/{userEmail} {
      allow read, create, update, delete: if isUserEmail(userEmail);
      allow list: if request.auth != null;
    }

    // Meal plans subcollection - user can manage their own
    // Structure: users/{userEmail}/mealPlans/{mealId}
    match /users/{userEmail}/mealPlans/{mealId} {
      allow read, create, update, delete: if isUserEmail(userEmail);
      allow list: if isUserEmail(userEmail);
    }

    // Calorie entries subcollection - user can manage their own
    // Structure: users/{userEmail}/calorieEntries/{entryId}
    match /users/{userEmail}/calorieEntries/{entryId} {
      allow read, create, update, delete: if isUserEmail(userEmail);
      allow list: if isUserEmail(userEmail);
    }

    // Favourite recipes subcollection - user can manage their own
    // Structure: users/{userEmail}/favouriteRecipes/{recipeId}
    match /users/{userEmail}/favouriteRecipes/{recipeId} {
      allow read, create, update, delete: if isUserEmail(userEmail);
      allow list: if isUserEmail(userEmail);
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
